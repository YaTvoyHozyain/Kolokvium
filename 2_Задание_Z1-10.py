# Z-2
def POZ_Z_D(b, n, a):
    # b - знак числа, n - количество разрядов, a - массив цифр числа
    # b = 0 - положительное, 1 - отрицательное
    # Возвращает 0 если число равно нулю, если отрицательное возвращает 1
    # и если положительное - 2
    if a == [0] * n:
        return 0
    elif b == 0:
        return 2
    else:
        return 1

# Z-3 Умножение целого на -1.
def MUL_ZM_Z(A,k):
    if k == 0:
        # Если число положительное, то есть знак числа k равно нулю,
        # то заменяем на противоположный знак
        k = 1
    else:
        # Иначе также заменяем k на противоположный знак.
        k = 0
    return k,A

# Z-4
# Преобразование натурального в целое
def TRANS_N_Z(A):
    A = [0] + A
    return A

# Z-5
# Преобразование целого неотрицательного числа в натуральное
def TRANS_Z_N(a):
    #приравниваем весь массив
    Str=a[:]
    #если 1 элемент массива ноль, то оно целое число, значит удаляем этот элемент
    if Str[0] == 0:
        Str.remove(Str[0])
    #если не 0, то значит число натуральное и выводит ошибку в применении
    elif Str[0] != 0:
        print("Error: Z-5")
    return Str

# Z - 8 - умножение целых чисел
def MUL_ZZ_Z(b1, n1, A1, b2, n2, A2):
    # из массива A1 и A2 делаем сначала строки, а потом числа
    str1 = ""
    str2 = ""
    for x in range(n1):
        str1 += str(A1[x])
    for x in range(n2):
        str2 += str(A2[x])
    a = int(str1)
    b = int(str2)
    c = a * b # умножение двух чисел в натуральном виде, знаки пока не учитываются (здесь вместо * должна быть функция умножения натуральных чисел MUL_NN_N)
    n3 = len(str(c))# n3 - номер старшего разряда получившегося числа, он же равен количесту цифр в числе
    # далее учитываются знаки чисел, поданных на вход, из этой информации получаем знак нового числа - b3
    if (POZ_Z_D(b1, n1, A1) == 2 and POZ_Z_D(b2, n2, A2) == 2) or (POZ_Z_D(b1, n1, A1) == 1 and POZ_Z_D(b2, n2, A2) == 1) or POZ_Z_D(b1, n1, A1) == 0 or POZ_Z_D(b2, n2, A2) == 0:
        b3 = 0
    elif (POZ_Z_D(b1, n1, A1) == 2 and POZ_Z_D(b2, n2, A2) == 1) or (POZ_Z_D(b1, n1, A1) == 1 and POZ_Z_D(b2, n2, A2) == 2):
        b3 = 1
    # из числа делаем массив его цифр
    A3 = []
    for x in range(n3):
        A3.append(int(str(c)[x]))
    return(b3, n3, A3)
